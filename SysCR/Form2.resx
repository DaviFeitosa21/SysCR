<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>