<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="contextMenuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>